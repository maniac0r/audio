# this is logstash parsing configuration file for RoonServer logfile
# usualy located in path like /etc/logstash/conf.d/
#

filter {
  if [log][file][path] == "/var/roon/RoonServer/Logs/RoonServer_log.txt" {
    grok {
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[library\] endmutation in %{NUMBER:roon.endmutation_ms}ms"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: updated recents in %{NUMBER:roon.updated_recents_ms}ms"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[library\] finished with %{NUMBER:roon.dirty_tracks} dirty tracks %{NUMBER:roon.dirty_albums} dirty albums %{NUMBER:roon.dirty_performers} dirty performers( %{NUMBER:roon.dirty_works} dirty works)?( %{NUMBER:roon.dirty_performances} dirty performances)? %{NUMBER:roon.clumping_tracks} clumping tracks, %{NUMBER:roon.clumping_auxfiles} clumping auxfiles %{NUMBER:roon.compute_tracks} compute tracks, %{NUMBER:roon.deleted_tracks} deleted tracks, %{NUMBER:roon.tracks_to_reload} tracks to \(re\)load, %{NUMBER:roon.tracks_to_retain} tracks to retain, %{NUMBER:roon.auxfiles_to_reload} auxfiles to \(re\)load, %{NUMBER:roon.auxfiles_to_retain} auxfiles to retain, and %{NUMBER:roon.changed_objecs} changed objects"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[prebuffer\] ready %{NUMBER:roon.prebuffer_done}/%{NUMBER:roon.prebuffer_total} \(%{NUMBER:roon.prebuffer_pct}\%\) @ %{NUMBER:roon.seconds_start}/%{NUMBER:roon.seconds_end} sec"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Info: \[stats\] %{NUMBER:roon.memory_virtual}mb Virtual, %{NUMBER:roon.memory_physical}mb Physical, %{NUMBER:roon.memory_managed}mb Managed, %{NUMBER:roon.handles} Handles, %{NUMBER:roon.threads} Threads"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[zoneplayer/raat\] sync %{DATA:roon.name_alias}: realtime=%{NUMBER:roon.realtime} rtt=%{NUMBER:roon.rtt_us}us offset=%{NUMBER:roon.offset_us}us delta=%{NUMBER:roon.delta_us}us drift=%{NUMBER:roon.drift_us}us in %{NUMBER:roon.in_s}s \(%{NUMBER:roon.ppm}ppm, %{NUMBER:roon.ms_hr}ms/hr\)"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[zoneplayer/raat\] synced to endpoint %{DATA:roon.endpoint_name_alias} clock: realtime=%{NUMBER:roon.realtime} rtt=%{NUMBER:roon.rtt_us}us offset=%{NUMBER:roon.offset_us}us delta=%{NUMBER:roon.delta}"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[raatclient\] SENT \[%{NUMBER:roon.raat_req_id}\]\{\"request\":\"stream\",\"stream_id\":%{NUMBER:roon.stream_id},\"first_seq\":%{NUMBER:roon.first_seq},\"nak_port\":%{NUMBER:roon.nak_port},\"buffer_size\":%{NUMBER:roon.buffer_size},\"ready_threshold\":%{NUMBER:roon.ready_threshold}\}"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[zoneplayer/raat\] \[zoneplayer/raat\] selected %{DATA:roon.clock_master} as clock master"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[dbperf\] flush %{NUMBER:roon.dbperf_flushbytes} bytes, %{NUMBER:roon.dbperf_ops} ops in %{NUMBER:roon.dbperf_ms} ms \(cumulative %{NUMBER:roon.dbperf_cumul_size} bytes, %{NUMBER:roon.dbperf_cumul_ops} ops in %{NUMBER:roon.dbperf_cumul_ms} ms\)"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[zoneplayer/raat\] wait for ready in %{NUMBER:roon.wait_ms}ms"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[zoneplayer/raat\] Adjusting playback start offset from %{NUMBER:roon.adjust_from_ms}ms to %{NUMBER:roon.adjust_to_ms}ms"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Warn: \[%{DATA:roon.player}\] \[zoneplayer/raat\] long rtt sync %{DATA:roon_endpoint.name_alias}: realtime=%{NUMBER:roon.realtime} rtt=%{NUMBER:roon.rtt_us}us offset=%{NUMBER:roon.offset_us}us delta=%{NUMBER:roon.delta}"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time} Trace: \[%{DATA:roon.player}\] \[%{WORD:roon.quality}( %{NUMBER:roon.processing_speed}x)?, %{NUMBER:roon.source_bits}/%{NUMBER:roon.source_khz} %{WORD:roon.service} %{WORD:roon.service_format} => %{NUMBER:roon.playback_bits}/%{NUMBER:roon.playback_khz}\]( \[%{NUMBER:roon.buff_pct}\% buf\])? \[%{WORD:roon.action} \@ %{NOTSPACE:roon.action_from}\] %{GREEDYDATA:roon.song}"}
      match => { "message" => "%{NUMBER:month}/%{NUMBER:day} %{TIME:time}"}
    }

    if [day] =~ "^[0-9][0-9]" {
    mutate {
             add_field => {
               "timestamp_roon" => "%{day}/%{month} %{time}"
             }
    }

    date {
           locale => "en"
           match => ["timestamp_roon", "dd/MM HH:mm:ss" ]
           timezone => [ "Europe/Bratislava" ]
           target => "@timestamp"
           remove_field => ["timestamp_roon", "day", "month", "time"]
    }
    }
  }

}
